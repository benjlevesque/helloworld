version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.1.0

jobs:
  build-push:
    docker:
     - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t benjlevesque/helloworld:${CIRCLE_SHA1:0:7} .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push benjlevesque/helloworld:${CIRCLE_SHA1:0:7}

  patch-staging:
    docker: 
      - image: circleci/node
    steps:
      - kubernetes/install
      - run: 
          name: "Patch k8s config & push"
          command: |
            REMOTE_URL=https://${DOCS_GITHUB_TOKEN}@github.com/benjlevesque/helloworld-k8s-staging.git
            IMAGE_VERSION=benjlevesque/helloworld:${CIRCLE_SHA1:0:7}

            echo REMOTE_URL $REMOTE_URL
            echo IMAGE_VERSION $IMAGE_VERSION

            # get the cluster config
            git clone $REMOTE_URL 
            cd helloworld-k8s-staging

            # patch the version number
            cat \<<EOF > patch.yaml
            spec:
              template:
                spec:
                  containers:
                    - name: helloworld
                      image: $IMAGE_VERSION
            EOF
            kubectl patch --local -o yaml \
              -f kubernetes/deployments/helloworld.yaml \
              -p "$(cat patch.yaml)" \
              > helloworld.yaml
            mv helloworld.yaml kubernetes/deployments/helloworld.yaml
            
            # commit & push
            git add kubernetes/deployments/helloworld.yaml

            git config credential.helper 'cache --timeout=120'
            git config user.email "benjamin.levesque+request-bot@request.network"
            git config user.name "Request Bot"
            git commit -m "Auto update to $IMAGE_VERSION"

            git push -q $REMOTE_URL master

workflows:
  version: 2.0
  deploy:
    jobs:
      - build-push
      - patch-staging:
          requires: 
            - build-push
